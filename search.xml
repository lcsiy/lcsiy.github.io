<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/09/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Linux入门</title>
    <url>/2021/03/21/Linux%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<ul>
<li><h2 id="Linux入门"><a href="#Linux入门" class="headerlink" title="Linux入门"></a>Linux入门</h2></li>
<li><h4 id="一、常用命令："><a href="#一、常用命令：" class="headerlink" title="一、常用命令："></a><strong>一、常用命令：</strong></h4><ol>
<li><p>ls -a显示隐藏文件，ls /显示根目录，-h人性化</p>
</li>
<li><p>-rw-r–r–</p>
<p>-u所有者-g所属组-o其他人-                                                                                                                                                                                                                                                                                                                                                                                                                  </p>
<p>r读，w写，x执行</p>
</li>
<li><p>ls -d查看目录而不显示目录下信息，-i查看id链</p>
</li>
<li><p><strong>目录处理命令：</strong>mkdir -p递归创建；pwd显示当前绝对路径；cd ..回到上级目录；rmdir 删除空目录</p>
</li>
<li><p>cp -r复制目录，-p保留文件属性；mv 剪切；</p>
</li>
<li><p>rm -r删除目录，-f强制执行，一般rm -rf直接删所有（危）</p>
</li>
<li><p><strong>文件处理命令：</strong>touch创建文件；cat显示文件内容（不适合长文件），cat -n显示行号；tac反向显示内容；</p>
</li>
<li><p>more分页显示文件内容（空格/f翻页，enter换行，q退出，b回翻）；less和more类似，/+关键词可搜索，按n可往下找；</p>
</li>
<li><p>head -n显示指定行数；tail -n显示末尾指定行数，-f动态显示文章末尾内容</p>
</li>
<li><p><strong>链接：</strong>ln -s /etc/dj /tmp/dj.soft ，创建文件/etc/dj的软连接/tmp/dj.soft</p>
<p>​            ln 硬链接；删除原文件软连接失效，硬链接仍可使用，硬链接与原文件同步更新且同一个i结点</p>
</li>
<li><p><strong>权限管理命令：</strong>chmod [ugoa]（三个不同用户，a指所有）+-=rwx [文件1]，同时改多个不同用户用，分隔使用，例chmod g+w，o-r Dj.mod；权限r指4、w指2、x指1，rwx就是权限7，可以直接用数字更改权限，例如chmod 640 Dj.mod，权限就变为-rw-r—–；命令后加 -R递归更改目录下所有文件。</p>
</li>
<li><p>若所有用户都对目录有w权限，则可在这个目录下创建删除文件，对文件有w权限只表示能改变该文件内容，要删除该文件需要对目录有w权限；一般情况rx同时存在。</p>
</li>
<li><p>chown [用户] [文件或目录]，改变所有者，chgrp（格式相同），改变用户组。</p>
</li>
<li><p>umask 显示、设置文件的缺省权限，-S以rwx的形式显示新建文件缺省权限</p>
</li>
<li><p><strong>文件搜索命令：</strong>find /etc -name init,在目录/etc下查找文件init，*<strong><strong>init****<em>查找带有init的文件，init</em></strong></strong>查找以init开头的文件，init???可查找init开头后有三个字母的文件；-iname则查找时不区分大小写。</p>
</li>
<li><p>find / -size +204800在根目录查找大于100MB的文件；find /home -user Dj查找所有者为Dj的文件；find /etc -cmin -5在/etc目录下查找5分钟内被修改过属性的文件和目录，-amin访问时间，-mmin文件内容，-cmin文件属性，+5为超过5分钟；</p>
</li>
<li><p>find /etc -size +163840 -a -size -204800，在/etc下查找大于80MB小于100MB的文件；-a两个条件同时满足，-o两个条件满足其一；find /etc -name init -exec ls -l {} ;在/etc下查找init文件并显示详情信息，-exec改为-ok则执行时询问；</p>
</li>
<li><p>-type f查找文件，d目录，l软链接文件；-inum根据i结点查找；</p>
</li>
<li><p>locate init在文件资料库中查找，直接找到文件所在位置，需要资料库更新后才可找到，可以通过updatedb更新，/tmp为临时文件处，可能找不到。-i可忽略大小写</p>
</li>
<li><p>which 搜索命令所在目录及别名信息，whereis搜索命令所在目录及帮助文档路径</p>
</li>
<li><p><strong>grep</strong> -iv [指定字串] [文件]，在文件中搜索字串匹配的行并输出，-i忽略大小写，-v排除指定字串，-v ^#将以#为开头的注释排除。</p>
</li>
<li><p><strong>帮助命令：</strong>man [命令]查看命令的帮助，man services查看配置文件帮助信息，whatis [命令]得到简短信息apropos [配置文件]查看简短信息。命令 –help可显示主要信息，info。。。</p>
</li>
<li><p>help [命令]查找shell内置命令的帮助信息</p>
</li>
<li><p><strong>用户管理命令：</strong>useradd 添加新用户，passwd 设置用户密码，who查看登录用户信息，tty本地终端，pts远程终端，w更详细信息。</p>
</li>
<li><p><strong>压缩解压命令：</strong>gzip压缩文件不能为目录，且压缩后不保留原文件，gunzip解压缩。</p>
</li>
<li><p>tar 选项[-zcf] [压缩后文件名] [目录]，打包目录，-c打包、-v显示信息、-f指定文件名、-z打包的同时压缩、-x解压缩，对于tar.gz文件，压缩和解压时使用-zcf，-zxf</p>
</li>
<li><p>zip 选项[-r] [压缩后文件名] [文件或目录]压缩文件或目录，-r压缩目录，unzip解压缩。</p>
</li>
<li><p>bzip2 选项[-k] [文件]压缩文件，-k产生压缩文件后保留原文件，bunzip2解压缩，对于tar.bz2，压缩和解压时用-cjf，-xjf</p>
</li>
<li><p><strong>网络命令：</strong>write &lt;用户名&gt;，给用户发信息，以Ctrl+D保存结束。wall [信息]发广播信息给所有用户。mail [用户名]查看发送电子邮件。</p>
</li>
<li><p>ping [选项] IP地址，测试网络联通性，-c指定发送次数。ifconfig [网卡名称] [IP地址] 查看和设置网卡信息。last 显示登录信息；lastlog显示最后登录时间 ；traceroute [网址] 显示数据包到主机的路径。</p>
</li>
<li><p>netstat [选项]，显示网络相关信息，-t TCP协议、-u UDP协议、-l 监听、-r路由、-n 显示IP地址和端口号；例 -tlun 查看本机监听的端口、-an查看本机所有网络连接、-rn查看本机路由表。</p>
</li>
<li><p>setup设置网络，service network restart重启网络.</p>
</li>
<li><p>mount [-t 文件系统] [设备文件名] [挂载点]，[-t 文件系统]可省略，一般为mount /dev/sr0 /mnt/cdrom/挂载镜像。umount /dev/sr0卸载。</p>
</li>
<li><p><strong>关机重启：</strong>shutdown [选项] [时间]，-c取消前一个关机命令，-h关机，-r重启。其他关机命令：halt、powerroff、init 0、reboot；</p>
</li>
<li><p><strong>系统运行级别：</strong>0关机、1单用户、2不完全多用户，不含NFS服务、3完全多用户、4未分配、5图形界面、6重启。init 5进图形界面。</p>
</li>
<li><p>cat /etc/inittab修改系统默认运行级别，runlevel查询系统运行级别，logout退出登录</p>
</li>
<li><p>dd if=输入文件 of=输出文件 bs=字节数 count=个数，用于磁盘复制。</p>
</li>
<li><p>grep [选项] “搜索内容” 文件名，-i忽略大小写，-n输出行号，-v反向查找，–color=auto搜索出的关键字用颜色显示。</p>
</li>
</ol>
</li>
<li><h4 id="二、Vim"><a href="#二、Vim" class="headerlink" title="二、Vim"></a><strong>二、Vim</strong></h4><ol>
<li><strong>常用操作：</strong>a在光标所在字符后插入，A在行尾插入；i在光标所在字符前插入，I在行首插入；o在光标下插入新行，O在光标上插入新行。</li>
<li><strong>定位命令：</strong>：set nu设置行号，set nonu取消行号，gg到第一行，G到最后一行，：n到第n行，$移至行尾，0移至行首。<ol start="3">
<li><strong>删除命令：</strong>x删除光标所在字符，nx删除光标后n个字符，dd删除光标所在行，dG删除光标所在行到文件末尾内容，D删除光标所在处到行尾内容，：n1，n2d删除指定范围行。</li>
</ol>
</li>
<li><strong>复制：</strong>yy复制当前行，nyy复制当前行以下n行，dd剪切当前行，ndd剪切以下n行，p或P粘贴在当前光标所在行下或行上。<ol start="5">
<li><strong>替换或取消：</strong>r取代光标所在处字符，R从光标所在处开始替换字符，按Esc结束，u取消上一步操作。</li>
</ol>
</li>
<li><strong>搜索和搜索替换：</strong>/string 搜索指定字符串，set ic搜索时忽略大小写；n搜索指定字符串的下一个出现位置；:%s/old/new/g全文替换指定字符串；:n1,n2s/old/new/g在一定范围内替换指定字符串。<ol start="7">
<li><strong>保存和退出：</strong>:w保存修改，：w new_filename另存为指定文件，：wq保存修改并退出，ZZ保存修改并退出，：q！不保存修改退出，：wq！保存修改并退出（文件所有者和root可用）。</li>
</ol>
</li>
<li><strong>技巧：</strong>：r [文件]将文件内容导入，r ![命令]，将命令执行结构导入。map 快捷键 触发命令，定制快捷键执行命令。连续行注释：:n1,n2s/^/#/g、:n1,n2s/^#//g、:n1,n2s/^////g。替换：:ab [字符串1] [字符串2]，输入字符串1按空格或回车即可自动变为字符串2.</li>
</ol>
</li>
<li><h4 id="三、软件包"><a href="#三、软件包" class="headerlink" title="三、软件包"></a><strong>三、软件包</strong></h4><ol>
<li><strong>安装：</strong>rpm -ivh 包全名，-i安装、-v显示详细信息、-h显示进度、–nodeps不检测依赖性。升级：rpm -Uvh 包全名。卸载：rpm -e 包名。</li>
<li><strong>查询：</strong>rpm -q 包名，-qa查询所有已安装包。rpm -qi 包名，-i查询软件信息、-p查询未安装包信息。rpm -ql 包名，查询包中文件安装位置。rpm -qf 系统文件名，查询系统文件属于哪个包。rpm -qR 包名，查询软件包的依赖性，一般加-p查询未安装包的依赖性。<ol start="3">
<li><strong>校验和提取：</strong>rpm -V 已安装包名，校验指定rpm包中的文件。rpm包中文件提取，rpm2cpio 包全名 | cpio -idv .文件绝对路径。（rpm2cpio将rpm包转化为cpio格式的命令，cpio是一个标准工具，用于创建软件档案文件和从档案文件中提取文件）。cpio 选项 &lt;[文件|设备]，-i还原、-d还原时自动新建目录、-v显示还原过程。</li>
</ol>
</li>
<li><strong>yum：</strong>yum list 查询可用软件包，yum search 关键字，搜索和关键字相关的包。yum -y update 包名，升级，remove卸载。软件组：yum grouplist列出可用软件组，groupinstall 软件组名，安装指定软件组，groupremove卸载。<ol start="5">
<li>源码包：rpm包安装的默认路径是/etc/rc.d/init.d，源码包的安装不在默认路径，一般安装在/usr/local/，源代码在/usr/local/src</li>
</ol>
</li>
</ol>
</li>
<li><h4 id="四、用户和用户组管理"><a href="#四、用户和用户组管理" class="headerlink" title="四、用户和用户组管理"></a><strong>四、用户和用户组管理</strong></h4></li>
<li><h4 id="七、shell"><a href="#七、shell" class="headerlink" title="七、shell"></a><strong>七、shell</strong></h4><ol>
<li><p><strong>echo</strong> [选项] [内容]，输出内容，-e支持反斜线控制的字符转换。echo -e “\e[1;31m lcdj \e[0m”输出红色lcdj。以\e[1;起，以\e[0m结，31m代表红色。</p>
</li>
<li><p><strong>脚本：</strong>开头#!/bin/bash,执行脚本时，可通过绝对路径运行，也可./hello.sh相对路径运行，还可bash hello.sh运行。dos2unix 文件，可将window中编写的文件转化为Linux可用格式的文件。</p>
</li>
<li><p><strong>历史命令：</strong>history [选项]，-c清空历史命令，-w把缓存中的历史命令写入历史命令保存文件~/.bash_history。!n重复执行第n条历史命令，!!重复执行上一条命令，!字串，重复执行最后一条以该字串开头的命令。</p>
</li>
<li><p><strong>别名：</strong>alias 别名=‘原命令’，设定命令别名，alias查询命令别名。让别名永久生效，vim /root/.bashrc</p>
</li>
<li><p><strong>重定向符号示例：</strong>命令 &gt;(&gt;&gt;) 文件,分别以覆盖、追加的方式把命令的正确输出输出到文件或设备；错误命令 2&gt;(&gt;&gt;) 文件分别以覆盖、追加的方式把命令的错误输出输出到文件或设备。命令 &gt;&gt; 文件1 2&gt;&gt; 文件2，把正确输出追加到文件1，把错误输出追加到文件2；命令 &gt; 文件 2&gt;&amp;1分别以覆盖的方式把正确输出和错误输出保存到一个文件中；命令 &amp;&gt; 文件以覆盖的方式把正确错误都保存在同一个文件；命令 &lt; 文件1 &gt; 文件2 命令，把文件1作为输入，文件2作为输出。</p>
</li>
<li><p><strong>输入重定向：</strong>wc [选项] 文件，-c统计字节，-w统计单词，-l统计行数。命令 &lt; 文件，把文件作为命令的输入。</p>
</li>
<li><p><strong>多命令顺序执行：</strong>命令 ； 命令2，多个命令顺序执行，命令间无逻辑关系。命令 &amp;&amp; 命令，就算逻辑连接词的一般理解。命令 || 命令，同上。管道：命令1 | 命令2，命令1的正确输出作为命令2的操作对象。</p>
</li>
<li><p><strong>通配符：</strong>?匹配任意一个字符，*匹配任意0个或多个字符，[]匹配括号中任意一个字符，[a-z]匹配范围内一个字符，中括号里^0-9表示匹配的不是一个数字。</p>
</li>
<li><p><strong>用户自定义变量：</strong>变量不能以数字开头，Bash中变量默认为字符串型。可aa=${aa}[字符串]来叠加。可将命令结果作为变量赋值给一个自定义变量，例如：name=$(date),echo $name.</p>
</li>
<li><p><strong>环境变量：</strong>export 变量名 = 变量值，申明变量。env查询变量，unset删除。</p>
</li>
<li><p><strong>PATH：</strong>系统查找命令的路径，一般自己写的脚本不放入原有系统目录，一般PATH=”$PATH”:[脚本所在路径]，变量叠加可临时使用。</p>
</li>
<li><p><strong>PS1：</strong>花哨(略)。</p>
</li>
<li><p><strong>位置参数变量：</strong>$n,$0代表命令本身，$1-$9指第1到第9个参数，十以上的参数应${10}。$*指命令行中所有的参数，并把他们看成一个整体。$@指命令行中所有参数，并把他们区分对待。$#指命令行中所有参数的个数。</p>
</li>
<li><p><strong>预定义变量：</strong>$?，最后一个命令的返回状态，0则表示正确执行。$$当前进程号（PID）。$！后台运行的最后一个进程号（PID）。在命令后加&amp;表示把命令放入后台执行。</p>
</li>
<li><p>接收键盘输入：<strong>read</strong> [选项] [变量名]，-p “提示信息”，-t 秒数，指定read等待用户输入的时间，-n 字符数，read命令只接收指定的字符数就会执行，-s 隐藏数据的输入。</p>
</li>
<li><p><strong>数值运算：</strong>$((运算式)),或$[运算式]。</p>
</li>
<li><p><strong>变量测试和内容替换：</strong>暂略。</p>
</li>
<li><p><strong>正则：</strong></p>
</li>
<li><p><strong>环境变量配置文件：</strong>source 配置文件或. 配置文件。</p>
</li>
<li><p><strong>字符截取（需要自查）：</strong>cut [选项] 文件名，-f提取第几列，-d按照指定分隔符分割列。awk：自查。sed轻量级流编辑器。sed [选项] ‘[动作]’ 文件，-n把经过sed处理的行输出到屏幕，-e允许对输入数据应用多余的sed命令编辑，-i用sed的修改结果直接修改读取数据的文件，而不是由屏幕输出。</p>
</li>
<li><p><strong>字符处理：</strong>排序：sort [选项] 文件，-f忽略大小写，-n以数值型进行排序，默认是字符串型排序，-r反向排序，-t指定分隔符，默认为制表符，-k n[,m]按照指定的字段范围排序。统计：wc [选项] 文件，-l只统计行数，-w只统计单词数，-m只统计字符数。</p>
</li>
<li><p><strong>条件判断：</strong>text [选项] 文件。具体选项太多，用时可随时查，常用的有：-e判断文件是否存在，-d判断是否为目录文件，-f判断是否为普通文件。判断也可用[ ]。</p>
</li>
<li><p>[-eq]等于，[-ne]不等于，[-gt]大于，[-lt]小于，[-ge]大于等于，[-le]小于等于。</p>
</li>
<li><p>按照文件权限判断：-r判断文件是否拥有读权限，-w判断文件是否有写权限，-x判断文件是否有执行权限，上述判断均先判断文件是否存在。</p>
</li>
<li><p>文件比较：文件1 -nt 文件2，判断文件1是否比文件2新；-ot则判断是否旧；-ef判断两个文件inode号是否一致，一般用于判断一个是否为另一个的硬链接。数值、字符串比较：略。</p>
</li>
<li><p>多重条件判断：判断1 -a 判断2，相当于逻辑与；判断1 -o 判断2，相当于逻辑或；！判断，逻辑非。</p>
</li>
<li><p><strong>流程控制：</strong> </p>
</li>
<li><p><strong>tee:</strong> 屏幕输出且保存到文件（覆盖），-a双向追加重定向。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo hello | tee hello.txt,</span><br></pre></td></tr></table></figure>
</li>
<li><p>uniq 去除连续的重复行，-i忽略大小写，-c统计重复行次数，-d只显示重复行。</p>
</li>
</ol>
</li>
<li><h4 id="八、Linux管理"><a href="#八、Linux管理" class="headerlink" title="八、Linux管理"></a>八、Linux管理</h4><ol>
<li>服务管理：</li>
<li><strong>系统管理：</strong>ps aux查看所有进程（BSD系统格式），ps -le同上（Linux标准格式）。</li>
<li><strong>top</strong> [选项]，-d 秒数，指定top命令每隔几秒更新，默认为3秒。在交互中，？或h显示交互模式的帮助，P以CPU使用率排序，默认就是这个，M以内存的使用率排序，N以PID排序，q退出。pstree [选项]，查看进程树，-p显示PID，-u显示进程的所属用户。</li>
<li><strong>kill</strong> -l显示信号，信号代号1，SIGHUP，关闭进程然后重启，9，SIGKILL强制终止，15，SIGTERM，kill的默认信号，正常结束进程。pkill [选项] [信号] 进程名，按照进程名终止进程，-t 终端号，按照终端号踢出用户。</li>
<li><strong>把进程放入后台：</strong>在命令后加&amp;，进程放入后台后继续运行，ctrl+z把进程放入后台并暂停执行。jobs 查看后台的工作，-l显示工作的PID。fg %工作号，将后台暂停的工作恢复到前台执行。（注意区分工作号和PID），bg则是恢复到后台工作。</li>
<li><strong>系统资源查看：</strong>vmstat [刷新延迟 刷新次数]，监控系统资源。dmesg开机时内核检测信息。</li>
<li>free [选项]，查看内存使用状态，-b以字节为单位显示，-k以KB为单位（默认），-m以MB，-g以GB。</li>
<li>uname查看系统与内核相关信息，-a查看系统所有相关信息，-r查看内核版本，-s查看内核名称。file /bin/ls查看系统位数。</li>
<li>lsof列出进程调用的文件，-c 字符串，只列出以字符串开头的进程打开的文件；-u 用户名只列出某个用户的进程打开的文件；-p PID，列出某个PID进程打开的文件。</li>
<li><strong>系统定时任务：</strong>crontab [选项]，-e编辑crontab定时任务，-l查询crontab任务，-r删除当前用户所有的crontab任务。标准格式为* * * * * command，*从左到右代表分、时、日、月、周几。</li>
<li>日志管理：</li>
<li>运行级别：runlevel查看运行级别命令，init 运行级别，改变运行级别。</li>
<li>grub：</li>
<li><strong>备份：</strong>dump [选项] 备份之后的文件名 原文件，-level 0-9备份级别，-f 文件名，指定备份之后的文件名，-u备份成功后把备份时间记录在/etc/dumpdates，-v显示备份过程中更多输出信息，-j调用bzlib库压缩备份文件成.bz2格式，-W显示允许被dump的分区的备份等级及时间。</li>
<li>restore [模式选项] [选项]，模式：-C比较备份数据和实际数据的变化，-i进入交互模式，手工选择需要恢复的文件，-t查看模式，用于查看备份文件中拥有哪些数据，-r还原模式，用于数据还原。选项：指定备份文件的文件名。</li>
</ol>
</li>
</ul>
]]></content>
  </entry>
</search>
